/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'product-section': ProductSection;
    'resources-section': ResourcesSection;
    blogs: Blog;
    'blog-section': BlogSection;
    contact: Contact;
    'contact-submissions': ContactSubmission;
    faq: Faq;
    'footer-component': FooterComponent;
    about: About;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'product-section': ProductSectionSelect<false> | ProductSectionSelect<true>;
    'resources-section': ResourcesSectionSelect<false> | ResourcesSectionSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    'blog-section': BlogSectionSelect<false> | BlogSectionSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    'footer-component': FooterComponentSelect<false> | FooterComponentSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'home-page': HomePage;
  };
  globalsSelect: {
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Cloudinary URL
   */
  cloudinary_url?: string | null;
  public_id?: string | null;
  resource_type?: string | null;
  original_filename?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-section".
 */
export interface ProductSection {
  id: string;
  sectionTitle: string;
  isActive?: boolean | null;
  order?: number | null;
  sectionStyles?: {
    backgroundColor?: string | null;
    marginTop?: string | null;
    paddingTop?: string | null;
    paddingBottom?: string | null;
  };
  topContainer: {
    styles?: {
      backgroundColor?: string | null;
      textColor?: string | null;
    };
    dotIndicator?: {
      show?: boolean | null;
      color?: string | null;
      text?: string | null;
      textColor?: string | null;
    };
    mainHeading: {
      text: string;
      color?: string | null;
      fontSize?: string | null;
      fontWeight?: string | null;
    };
  };
  products?:
    | {
        order?: number | null;
        isActive?: boolean | null;
        styles?: {
          backgroundColor?: string | null;
          borderColor?: string | null;
          borderWidth?: string | null;
          borderRadius?: string | null;
          padding?: string | null;
          marginBottom?: string | null;
        };
        leftContainer: {
          styles?: {
            backgroundColor?: string | null;
            textColor?: string | null;
          };
          title: string;
          titleStyles?: {
            color?: string | null;
            fontSize?: string | null;
            fontWeight?: string | null;
          };
          description: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          descriptionStyles?: {
            color?: string | null;
            fontSize?: string | null;
            lineHeight?: string | null;
          };
          tag?: {
            show?: boolean | null;
            text?: string | null;
            icon?: (string | null) | Media;
            iconUrl?: string | null;
            styles?: {
              backgroundColor?: string | null;
              textColor?: string | null;
              borderRadius?: string | null;
            };
          };
          productSeo?: {
            sku?: string | null;
            brand?: string | null;
            price?: number | null;
            currency?: string | null;
            availability?:
              | ('https://schema.org/InStock' | 'https://schema.org/OutOfStock' | 'https://schema.org/PreOrder')
              | null;
            ratingValue?: number | null;
            reviewCount?: number | null;
          };
        };
        applicationsSection?: {
          show?: boolean | null;
          heading?: string | null;
          headingStyles?: {
            color?: string | null;
            fontSize?: string | null;
            fontWeight?: string | null;
          };
          styles?: {
            backgroundColor?: string | null;
            padding?: string | null;
          };
          applications?:
            | {
                order?: number | null;
                title: string;
                image?: (string | null) | Media;
                imageUrl?: string | null;
                styles?: {
                  backgroundColor?: string | null;
                  textColor?: string | null;
                  borderColor?: string | null;
                  borderRadius?: string | null;
                  padding?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        ctaButton?: {
          show?: boolean | null;
          text?: string | null;
          link?: string | null;
          icon?: (string | null) | Media;
          iconUrl?: string | null;
          styles?: {
            backgroundColor?: string | null;
            textColor?: string | null;
            hoverBackgroundColor?: string | null;
            hoverTextColor?: string | null;
            borderRadius?: string | null;
            padding?: string | null;
            fontSize?: string | null;
            fontWeight?: string | null;
          };
        };
        rightContainer?: {
          styles?: {
            backgroundColor?: string | null;
            borderRadius?: string | null;
          };
          image?: (string | null) | Media;
          imageUrl?: string | null;
          imageStyles?: {
            width?: string | null;
            height?: string | null;
            objectFit?: ('cover' | 'contain') | null;
            borderRadius?: string | null;
          };
          sliderSettings?: {
            autoplay?: boolean | null;
            delay?: number | null;
            duration?: number | null;
            infinite?: boolean | null;
          };
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Complete SEO for this product section
   */
  seo: {
    /**
     * PRIMARY SEO TITLE (50-60 chars)
     */
    meta_title?: string | null;
    /**
     * PRIMARY META DESCRIPTION (150-160 chars)
     */
    meta_description?: string | null;
    keyword_optimization: {
      primary_keyword: string;
      secondary_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      long_tail_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      keyword_density_target?: number | null;
      lsi_keywords?: string | null;
    };
    open_graph?: {
      og_title?: string | null;
      og_description?: string | null;
      og_image?: (string | null) | Media;
      og_image_alt?: string | null;
      og_type?: ('product' | 'website') | null;
      og_locale?: string | null;
      og_site_name?: string | null;
    };
    twitter?: {
      twitter_card_type?: ('summary_large_image' | 'summary') | null;
      twitter_title?: string | null;
      twitter_description?: string | null;
      twitter_image?: (string | null) | Media;
      twitter_image_alt?: string | null;
      twitter_site?: string | null;
      twitter_creator?: string | null;
    };
    schema: {
      enable_schema?: boolean | null;
      article_type?: ('Product' | 'WebPage') | null;
      headline?: string | null;
      word_count?: number | null;
      time_required?: string | null;
      publisher: {
        name: string;
        logo: string | Media;
        logo_width?: number | null;
        logo_height?: number | null;
        url?: string | null;
      };
      author_schema?: {
        author_type?: ('Organization' | 'Person') | null;
        author_url?: string | null;
      };
      modified_time?: string | null;
      faq_schema?:
        | {
            question: string;
            answer: string;
            id?: string | null;
          }[]
        | null;
      breadcrumb_schema?:
        | {
            name: string;
            item: string;
            id?: string | null;
          }[]
        | null;
    };
    robots?: {
      index?: ('index' | 'noindex') | null;
      follow?: ('follow' | 'nofollow') | null;
    };
    urls?: {
      canonical_url?: string | null;
      alternate_languages?:
        | {
            language_code?: string | null;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    sitemap?: {
      include_in_sitemap?: boolean | null;
      sitemap_priority?: number | null;
      change_frequency?: ('monthly' | 'weekly' | 'daily') | null;
      last_modified?: string | null;
    };
    performance?: {
      preload_resources?:
        | {
            href: string;
            as?: ('image' | 'font' | 'script') | null;
            type?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    custom_tags?: {
      meta_tags?:
        | {
            tag_type: 'meta_name' | 'meta_property';
            attribute_name: string;
            attribute_value: string;
            id?: string | null;
          }[]
        | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources-section".
 */
export interface ResourcesSection {
  id: string;
  /**
   * Internal name to identify this section
   */
  sectionName: string;
  /**
   * Toggle to show/hide this section
   */
  isActive?: boolean | null;
  /**
   * Enable background image for this section
   */
  hasBackgroundImage?: boolean | null;
  /**
   * Background image for the section
   */
  backgroundImage?: (string | null) | Media;
  styling?: {
    /**
     * Section background color (e.g., #ffffff, transparent, rgb(255,255,255))
     */
    sectionBackgroundColor?: string | null;
    /**
     * Top padding (e.g., 100px, 5rem)
     */
    sectionPaddingTop?: string | null;
    /**
     * Bottom padding (e.g., 100px, 5rem)
     */
    sectionPaddingBottom?: string | null;
    /**
     * Color of the heading dot
     */
    dotColor?: string | null;
    /**
     * Color of "Resources" label
     */
    labelColor?: string | null;
    /**
     * Color of the main heading
     */
    mainHeadingColor?: string | null;
    /**
     * Color of the description text
     */
    descriptionColor?: string | null;
    /**
     * Background color for resource cards
     */
    cardBackgroundColor?: string | null;
    /**
     * Color of card titles
     */
    cardTitleColor?: string | null;
    /**
     * Color of card descriptions
     */
    cardDescriptionColor?: string | null;
    /**
     * Color of download icons
     */
    iconColor?: string | null;
  };
  content: {
    /**
     * Small label above the main heading
     */
    label: string;
    /**
     * Main heading for the section
     */
    title: string;
    /**
     * Description text for the section
     */
    description: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  /**
   * List of technical resources (drag to reorder)
   */
  technicalResources: {
    /**
     * Display order (lower numbers appear first)
     */
    order?: number | null;
    /**
     * Show/hide this resource
     */
    isActive?: boolean | null;
    /**
     * Resource title
     */
    title: string;
    /**
     * Resource description
     */
    description: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * Upload the file for download
     */
    file?: (string | null) | Media;
    /**
     * Or provide an external link (overrides file upload)
     */
    externalLink?: string | null;
    /**
     * Open link in new tab
     */
    openInNewTab?: boolean | null;
    /**
     * Override default styling for this specific card
     */
    customStyling?: {
      useCustomStyling?: boolean | null;
      backgroundColor?: string | null;
      titleColor?: string | null;
      descriptionColor?: string | null;
      iconColor?: string | null;
    };
    id?: string | null;
  }[];
  /**
   * Advanced customization options
   */
  advancedSettings?: {
    /**
     * Add custom CSS for this section
     */
    customCSS?: string | null;
    /**
     * Add custom CSS class name
     */
    customClassName?: string | null;
    /**
     * Custom ID for anchor links
     */
    sectionId?: string | null;
    maxResourcesPerRow?: ('2' | '3' | '4') | null;
    /**
     * Enable hover effects on cards
     */
    cardHoverEffect?: boolean | null;
  };
  seo?: {
    /**
     * Accessibility label for screen readers
     */
    sectionAriaLabel?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  isActive?: boolean | null;
  isFeatured?: boolean | null;
  order?: number | null;
  title: string;
  /**
   * Auto-generated from title. Edit only if needed.
   */
  slug: string;
  description: string;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image: string | Media;
  tag: string;
  min_read: number;
  created_at: string;
  author: {
    name: string;
    profile_picture: string | Media;
    bio?: string | null;
  };
  related_blogs?: (string | Blog)[] | null;
  /**
   * Complete SEO optimization for maximum search visibility
   */
  seo: {
    /**
     * PRIMARY SEO TITLE (50-60 chars optimal)
     */
    meta_title?: string | null;
    /**
     * PRIMARY META DESCRIPTION (150-160 chars)
     */
    meta_description?: string | null;
    keyword_optimization: {
      primary_keyword: string;
      secondary_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      long_tail_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      keyword_density_target?: number | null;
      lsi_keywords?: string | null;
    };
    open_graph?: {
      og_title?: string | null;
      og_description?: string | null;
      og_image?: (string | null) | Media;
      og_image_alt?: string | null;
      og_type?: ('article' | 'website') | null;
      og_locale?: string | null;
      og_site_name?: string | null;
      article_section?: string | null;
      article_tags?:
        | {
            tag?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    twitter?: {
      twitter_card_type?: ('summary_large_image' | 'summary') | null;
      twitter_title?: string | null;
      twitter_description?: string | null;
      twitter_image?: (string | null) | Media;
      twitter_image_alt?: string | null;
      twitter_site?: string | null;
      twitter_creator?: string | null;
    };
    schema: {
      enable_schema?: boolean | null;
      article_type?: ('BlogPosting' | 'Article' | 'NewsArticle') | null;
      headline?: string | null;
      word_count?: number | null;
      time_required?: string | null;
      publisher: {
        name: string;
        logo: string | Media;
        logo_width?: number | null;
        logo_height?: number | null;
        url?: string | null;
      };
      author_schema?: {
        author_type?: ('Person' | 'Organization') | null;
        author_url?: string | null;
        author_job_title?: string | null;
        author_social_profiles?:
          | {
              url?: string | null;
              id?: string | null;
            }[]
          | null;
      };
      modified_time?: string | null;
      image_schema?:
        | {
            image?: (string | null) | Media;
            caption?: string | null;
            id?: string | null;
          }[]
        | null;
      faq_schema?:
        | {
            question: string;
            answer: string;
            id?: string | null;
          }[]
        | null;
      breadcrumb_schema?:
        | {
            name: string;
            item: string;
            id?: string | null;
          }[]
        | null;
    };
    robots?: {
      index?: ('index' | 'noindex') | null;
      follow?: ('follow' | 'nofollow') | null;
    };
    urls?: {
      canonical_url?: string | null;
      alternate_languages?:
        | {
            language_code?: string | null;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    sitemap?: {
      include_in_sitemap?: boolean | null;
      sitemap_priority?: number | null;
      change_frequency?: ('weekly' | 'daily' | 'monthly') | null;
      last_modified?: string | null;
    };
    link_management?: {
      /**
       * Redirect this URL to another page
       */
      redirect_type?: ('none' | '301' | '302' | '307' | '308') | null;
      /**
       * Destination URL for redirect
       */
      redirect_url?: string | null;
      /**
       * Default policy for external links
       */
      external_links_policy?: ('follow' | 'nofollow' | 'sponsored' | 'ugc') | null;
    };
    /**
     * AI-powered content quality metrics
     */
    content_analysis?: {
      /**
       * Flesch Reading Ease score (60-70 = Standard, 70-80 = Easy)
       */
      readability_score?: number | null;
      /**
       * Reading grade level (e.g., "8th Grade")
       */
      grade_level?: string | null;
      /**
       * Total sentences
       */
      sentence_count?: number | null;
      /**
       * Total paragraphs
       */
      paragraph_count?: number | null;
      /**
       * Actual keyword density %
       */
      keyword_density?: number | null;
      /**
       * Number of internal links (3-10 recommended)
       */
      internal_links_count?: number | null;
      /**
       * Number of external links (1-5 recommended)
       */
      external_links_count?: number | null;
      /**
       * Number of images
       */
      images_count?: number | null;
      /**
       * Images with alt text
       */
      images_with_alt_count?: number | null;
    };
    /**
     * Overall SEO performance metrics
     */
    seo_score?: {
      /**
       * 🎯 Overall SEO Score (0-100)
       */
      overall_score?: number | null;
      score_breakdown?: {
        /**
         * Title optimization (0-100)
         */
        title_score?: number | null;
        /**
         * Description optimization (0-100)
         */
        description_score?: number | null;
        /**
         * Keyword optimization (0-100)
         */
        keyword_score?: number | null;
        /**
         * Content quality (0-100)
         */
        content_score?: number | null;
        /**
         * Technical SEO (0-100)
         */
        technical_score?: number | null;
        /**
         * Mobile optimization (0-100)
         */
        mobile_score?: number | null;
        /**
         * Accessibility (0-100)
         */
        accessibility_score?: number | null;
      };
      /**
       * 💡 AI-generated SEO recommendations
       */
      recommendations?:
        | {
            priority?: ('critical' | 'high' | 'medium' | 'low') | null;
            category?: string | null;
            message?: string | null;
            fix_url?: string | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Last SEO analysis date
       */
      last_analysis?: string | null;
    };
    geographic?: {
      /**
       * Enable geographic targeting
       */
      enable_geo_targeting?: boolean | null;
      /**
       * Target region (e.g., US, US-CA, GB)
       */
      geo_region?: string | null;
      /**
       * Place name (e.g., "San Francisco, CA")
       */
      geo_placename?: string | null;
      /**
       * Coordinates (latitude;longitude)
       */
      geo_position?: string | null;
      /**
       * ICBM coordinates (comma-separated)
       */
      icbm?: string | null;
    };
    performance?: {
      /**
       * Resources to preload for better performance
       */
      preload_resources?:
        | {
            href: string;
            as?: ('font' | 'image' | 'script' | 'style' | 'video') | null;
            /**
             * MIME type (e.g., font/woff2)
             */
            type?: string | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Domains to DNS prefetch
       */
      dns_prefetch?:
        | {
            domain?: string | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Domains to preconnect
       */
      preconnect?:
        | {
            domain?: string | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Inline critical CSS for above-the-fold content
       */
      critical_css?: string | null;
    };
    security?: {
      /**
       * Controls referrer information sent with requests
       */
      referrer_policy?:
        | (
            | 'no-referrer'
            | 'no-referrer-when-downgrade'
            | 'origin'
            | 'origin-when-cross-origin'
            | 'same-origin'
            | 'strict-origin'
            | 'strict-origin-when-cross-origin'
            | 'unsafe-url'
          )
        | null;
      /**
       * Content Security Policy directives
       */
      content_security_policy?: string | null;
    };
    custom_tags?: {
      /**
       * Add any custom meta tags
       */
      meta_tags?:
        | {
            tag_type: 'meta_name' | 'meta_property' | 'meta_http_equiv' | 'link';
            /**
             * Attribute name (e.g., "author", "theme-color")
             */
            attribute_name: string;
            /**
             * Attribute value
             */
            attribute_value: string;
            id?: string | null;
          }[]
        | null;
      /**
       * Custom scripts/tags for <head> section
       */
      custom_head_scripts?: string | null;
      /**
       * Custom scripts for end of <body> section
       */
      custom_body_scripts?: string | null;
    };
    social_media?: {
      pinterest?: {
        /**
         * Pinterest-specific description
         */
        pin_description?: string | null;
        /**
         * Enable Pinterest Rich Pins
         */
        pin_rich_pins?: boolean | null;
      };
      linkedin?: {
        /**
         * LinkedIn profile URL of author
         */
        linkedin_author?: string | null;
      };
      whatsapp?: {
        /**
         * Pre-filled text for WhatsApp sharing
         */
        whatsapp_share_text?: string | null;
      };
      telegram?: {
        /**
         * Telegram channel username
         */
        telegram_channel?: string | null;
      };
    };
    analytics?: {
      /**
       * Custom page type for GA4
       */
      google_analytics_page_type?: string | null;
      /**
       * Content category for analytics
       */
      google_analytics_category?: string | null;
      /**
       * Custom dimensions for analytics
       */
      custom_dimensions?:
        | {
            dimension_name?: string | null;
            dimension_value?: string | null;
            id?: string | null;
          }[]
        | null;
      conversion_tracking?: {
        /**
         * Track this page as a conversion goal
         */
        enable_conversion?: boolean | null;
        /**
         * Conversion ID
         */
        conversion_id?: string | null;
        /**
         * Conversion label
         */
        conversion_label?: string | null;
      };
    };
    accessibility?: {
      /**
       * Primary language code (e.g., en, es, fr)
       */
      lang_attribute?: string | null;
      /**
       * Include "Skip to Content" link
       */
      skip_to_content?: boolean | null;
      /**
       * ARIA label for page
       */
      aria_label?: string | null;
      /**
       * Color contrast standard
       */
      color_contrast_compliance?: ('AA' | 'AAA') | null;
    };
    competitive?: {
      /**
       * Competitor URLs targeting same keywords
       */
      target_competitors?:
        | {
            competitor_url?: string | null;
            notes?: string | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Target SERP position goal
       */
      target_serp_position?: number | null;
      /**
       * Current ranking position (auto-tracked)
       */
      current_serp_position?: number | null;
    };
    freshness?: {
      /**
       * Content lifecycle type
       */
      content_status?: ('evergreen' | 'time_sensitive' | 'news' | 'seasonal') | null;
      /**
       * Next scheduled content review date
       */
      review_date?: string | null;
      /**
       * Content expiration date (if applicable)
       */
      expiry_date?: string | null;
      /**
       * How often to update this content
       */
      update_frequency_goal?: ('never' | 'quarterly' | 'biannually' | 'annually') | null;
      /**
       * Major update history
       */
      version_history?:
        | {
            version?: string | null;
            update_date?: string | null;
            changes_summary?: string | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-section".
 */
export interface BlogSection {
  id: string;
  /**
   * Internal name to identify this section configuration
   */
  sectionName: string;
  /**
   * Toggle to show/hide blog section
   */
  isActive?: boolean | null;
  styling?: {
    /**
     * Section background color
     */
    sectionBackgroundColor?: string | null;
    /**
     * Top padding (e.g., 100px, 5rem)
     */
    sectionPaddingTop?: string | null;
    /**
     * Bottom padding
     */
    sectionPaddingBottom?: string | null;
    /**
     * Color of the heading dots
     */
    dotColor?: string | null;
    /**
     * Color of "FEATURED BLOG" label
     */
    featuredLabelColor?: string | null;
    /**
     * Color of "RECENT BLOGS" label
     */
    recentLabelColor?: string | null;
    /**
     * Color of blog titles
     */
    blogTitleColor?: string | null;
    /**
     * Color of blog descriptions
     */
    blogDescriptionColor?: string | null;
    /**
     * Background color for tags
     */
    tagBackgroundColor?: string | null;
    /**
     * Text color for tags
     */
    tagTextColor?: string | null;
  };
  labels: {
    featuredLabel: string;
    recentLabel: string;
    moreLabel: string;
    viewAllText: string;
    viewAllLink: string;
  };
  displaySettings?: {
    /**
     * Show featured blog section
     */
    showFeaturedSection?: boolean | null;
    /**
     * Show recent blogs section
     */
    showRecentSection?: boolean | null;
    /**
     * Number of recent blogs to display
     */
    numberOfRecentBlogs?: number | null;
    /**
     * Automatically select latest blog marked as "featured"
     */
    autoSelectFeatured?: boolean | null;
    /**
     * Manually select featured blog
     */
    manualFeaturedBlog?: (string | null) | Blog;
  };
  /**
   * Styling for individual blog page hero section
   */
  blogPageHeroStyling?: {
    heroBackgroundColor?: string | null;
    tagBackgroundColor?: string | null;
    tagTextColor?: string | null;
    titleColor?: string | null;
    descriptionColor?: string | null;
    authorNameColor?: string | null;
    dateColor?: string | null;
  };
  advanced?: {
    /**
     * Add custom CSS for blog sections
     */
    customCSS?: string | null;
    /**
     * Add custom CSS class name
     */
    customClassName?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: string;
  name: string;
  componentType: 'contact-hero' | 'hero' | 'about';
  isActive?: boolean | null;
  order?: number | null;
  sections?:
    | {
        sectionName: string;
        sectionOrder?: number | null;
        /**
         * Enter hex color code (e.g., #ff6b35)
         */
        backgroundColor?: string | null;
        backgroundImage?: (string | null) | Media;
        /**
         * Use this if you want to provide an external image URL
         */
        backgroundImageUrl?: string | null;
        textColor?: string | null;
        /**
         * Color for headings, dots, buttons, etc.
         */
        accentColor?: string | null;
        padding?: {
          top?: string | null;
          bottom?: string | null;
          left?: string | null;
          right?: string | null;
        };
        content?: {
          badge?: string | null;
          badgeColor?: string | null;
          title?: string | null;
          titleColor?: string | null;
          description?: string | null;
          descriptionColor?: string | null;
        };
        contactDetails?: {
          detailsOrder?:
            | {
                type: 'phone' | 'email' | 'address';
                label: string;
                labelColor?: string | null;
                value: string;
                valueColor?: string | null;
                link?: string | null;
                isVisible?: boolean | null;
                order?: number | null;
                id?: string | null;
              }[]
            | null;
        };
        formSettings?: {
          showForm?: boolean | null;
          formBackgroundColor?: string | null;
          formTextColor?: string | null;
          inputBorderColor?: string | null;
          submitButtonColor?: string | null;
          submitButtonTextColor?: string | null;
          submitButtonText?: string | null;
          successMessage?: string | null;
          errorMessage?: string | null;
          formFields?:
            | {
                fieldName: string;
                fieldLabel: string;
                fieldType?: ('text' | 'email' | 'tel' | 'textarea') | null;
                placeholder?: string | null;
                isRequired?: boolean | null;
                fieldWidth?: ('full' | 'half') | null;
                order?: number | null;
                isVisible?: boolean | null;
                id?: string | null;
              }[]
            | null;
        };
        /**
         * Add any custom CSS for this section
         */
        customCSS?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: string;
  first_name: string;
  last_name: string;
  email_address: string;
  phone: string;
  city?: string | null;
  message: string;
  status?: ('new' | 'read' | 'responded' | 'archived') | null;
  /**
   * Internal notes about this submission
   */
  notes?: string | null;
  ipAddress?: string | null;
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: string;
  componentName: string;
  componentType: 'faq-section' | 'hero-section' | 'services-section';
  isActive?: boolean | null;
  order: number;
  faqSection?: {
    sectionStyles?: {
      /**
       * Hex color code (e.g., #ffffff)
       */
      backgroundColor?: string | null;
      paddingTop?: string | null;
      paddingBottom?: string | null;
    };
    topSection: {
      styles?: {
        backgroundColor?: string | null;
        marginBottom?: string | null;
      };
      dot?: {
        show?: boolean | null;
        color?: string | null;
        size?: string | null;
      };
      smallHeading: {
        text: string;
        color?: string | null;
        fontSize?: string | null;
        fontWeight?: string | null;
        textTransform?: ('none' | 'uppercase' | 'lowercase' | 'capitalize') | null;
      };
      mainHeading: {
        text: string;
        color?: string | null;
        fontSize?: string | null;
        fontWeight?: string | null;
        lineHeight?: string | null;
        marginTop?: string | null;
      };
    };
    faqItems?:
      | {
          question: string;
          answer: string;
          isDefaultOpen?: boolean | null;
          styles?: {
            questionColor?: string | null;
            questionFontSize?: string | null;
            questionFontWeight?: string | null;
            answerColor?: string | null;
            answerFontSize?: string | null;
            answerFontWeight?: string | null;
            borderColor?: string | null;
            backgroundColor?: string | null;
            hoverBackgroundColor?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    faqListStyles?: {
      itemSpacing?: string | null;
      chevronColor?: string | null;
      chevronSize?: string | null;
    };
    ctaSection: {
      show?: boolean | null;
      styles?: {
        backgroundColor?: string | null;
        marginTop?: string | null;
        padding?: string | null;
      };
      ctaButton: {
        text: string;
        link: string;
        backgroundColor?: string | null;
        textColor?: string | null;
        hoverBackgroundColor?: string | null;
        fontSize?: string | null;
        fontWeight?: string | null;
        padding?: string | null;
        borderRadius?: string | null;
        showIcon?: boolean | null;
        iconUrl?: string | null;
      };
      ctaText?: {
        text?: string | null;
        color?: string | null;
        fontSize?: string | null;
        fontWeight?: string | null;
        lineHeight?: string | null;
        marginTop?: string | null;
      };
    };
    animations?: {
      enableAnimations?: boolean | null;
      /**
       * Duration for open/close animations
       */
      transitionDuration?: string | null;
      transitionEasing?: ('ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear') | null;
    };
    layout?: {
      maxWidth?: string | null;
      faqListMaxWidth?: string | null;
      ctaSectionMaxWidth?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-component".
 */
export interface FooterComponent {
  id: string;
  componentName: string;
  isActive?: boolean | null;
  /**
   * Hex, RGB, or CSS color value
   */
  backgroundColor?: string | null;
  textColor?: string | null;
  padding?: {
    top?: string | null;
    bottom?: string | null;
    left?: string | null;
    right?: string | null;
  };
  logoSection?: {
    logo?: (string | null) | Media;
    logoUrl?: string | null;
    logoLink?: string | null;
    logoAlt?: string | null;
    logoMarginLeft?: string | null;
    backgroundColor?: string | null;
    brandSubtext?: string | null;
    subtextColor?: string | null;
  };
  newsletterForm?: {
    enabled?: boolean | null;
    backgroundColor?: string | null;
    inputPlaceholder?: string | null;
    submitButtonText?: string | null;
    inputBackgroundColor?: string | null;
    inputTextColor?: string | null;
    inputBorderColor?: string | null;
    buttonBackgroundColor?: string | null;
    buttonTextColor?: string | null;
    buttonHoverColor?: string | null;
    successMessage?: string | null;
    errorMessage?: string | null;
    privacyText?: string | null;
    privacyTextColor?: string | null;
  };
  /**
   * Add and reorder navigation columns. Drag to change order.
   */
  navigationSections?:
    | {
        heading: string;
        headingColor?: string | null;
        backgroundColor?: string | null;
        padding?: string | null;
        /**
         * Add and reorder links. Drag to change order.
         */
        links?:
          | {
              label: string;
              url: string;
              linkColor?: string | null;
              linkHoverColor?: string | null;
              openInNewTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  bottomSection?: {
    backgroundColor?: string | null;
    borderTop?: string | null;
    padding?: string | null;
    copyrightText?: string | null;
    copyrightTextColor?: string | null;
  };
  socialSection?: {
    heading?: string | null;
    headingColor?: string | null;
    /**
     * Add and reorder social links. Drag to change order.
     */
    socialLinks?:
      | {
          platform: 'whatsapp' | 'facebook' | 'twitter' | 'instagram' | 'linkedin' | 'youtube' | 'custom';
          url: string;
          iconColor?: string | null;
          iconHoverColor?: string | null;
          /**
           * Only needed if platform is "Custom"
           */
          customSvg?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  layout?: {
    maxWidth?: string | null;
    topSectionFlexDirection?: ('row' | 'column') | null;
    topSectionGap?: string | null;
    bottomSectionFlexDirection?: ('row' | 'column') | null;
    bottomSectionJustifyContent?: ('space-between' | 'center' | 'flex-start' | 'flex-end') | null;
  };
  /**
   * Add any additional custom CSS styles here
   */
  customCSS?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: string;
  name: string;
  /**
   * Unique identifier for the component (e.g., story-section)
   */
  slug: string;
  isActive?: boolean | null;
  /**
   * Drag and drop to reorder sections
   */
  sections?:
    | {
        /**
         * Unique identifier for this section
         */
        sectionId: string;
        sectionType: 'story_section' | 'hero_section' | 'feature_section' | 'custom_section';
        /**
         * Lower numbers appear first
         */
        order: number;
        isVisible?: boolean | null;
        styling?: {
          /**
           * Hex, RGB, or color name (e.g., #ffffff, rgb(255,255,255), white)
           */
          backgroundColor?: string | null;
          /**
           * Color for all text in this section
           */
          textColor?: string | null;
          paddingTop?: number | null;
          paddingBottom?: number | null;
          paddingLeft?: number | null;
          paddingRight?: number | null;
          /**
           * Additional CSS classes to apply
           */
          customCSS?: string | null;
        };
        storyContent?: {
          image: {
            url: string | Media;
            altText: string;
            sizes?: string | null;
            loading?: ('lazy' | 'eager') | null;
          };
          title: {
            text: string;
            /**
             * Override section text color for title
             */
            color?: string | null;
            fontSize?: number | null;
            fontWeight?: ('normal' | '500' | '600' | 'bold') | null;
            customClass?: string | null;
          };
          description: {
            content: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            color?: string | null;
            fontSize?: number | null;
            lineHeight?: number | null;
            customClass?: string | null;
          };
          layout?: {
            imagePosition?: ('left' | 'right') | null;
            containerWidth?: ('small' | 'medium' | 'large' | 'full') | null;
            verticalAlignment?: ('flex-start' | 'center' | 'flex-end') | null;
          };
        };
        /**
         * Drag and drop to reorder links
         */
        links?:
          | {
              linkText: string;
              linkUrl: string;
              linkType?: ('internal' | 'external' | 'download') | null;
              openInNewTab?: boolean | null;
              order: number;
              styling?: {
                backgroundColor?: string | null;
                textColor?: string | null;
                borderColor?: string | null;
                borderWidth?: number | null;
                borderRadius?: number | null;
                /**
                 * CSS padding value (e.g., 10px 20px)
                 */
                padding?: string | null;
                hoverBackgroundColor?: string | null;
                hoverTextColor?: string | null;
                customClass?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        animations?: {
          enableAnimations?: boolean | null;
          animationType?: ('fade' | 'slide' | 'zoom' | 'none') | null;
          animationDelay?: number | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'product-section';
        value: string | ProductSection;
      } | null)
    | ({
        relationTo: 'resources-section';
        value: string | ResourcesSection;
      } | null)
    | ({
        relationTo: 'blogs';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'blog-section';
        value: string | BlogSection;
      } | null)
    | ({
        relationTo: 'contact';
        value: string | Contact;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: string | ContactSubmission;
      } | null)
    | ({
        relationTo: 'faq';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'footer-component';
        value: string | FooterComponent;
      } | null)
    | ({
        relationTo: 'about';
        value: string | About;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  cloudinary_url?: T;
  public_id?: T;
  resource_type?: T;
  original_filename?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-section_select".
 */
export interface ProductSectionSelect<T extends boolean = true> {
  sectionTitle?: T;
  isActive?: T;
  order?: T;
  sectionStyles?:
    | T
    | {
        backgroundColor?: T;
        marginTop?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  topContainer?:
    | T
    | {
        styles?:
          | T
          | {
              backgroundColor?: T;
              textColor?: T;
            };
        dotIndicator?:
          | T
          | {
              show?: T;
              color?: T;
              text?: T;
              textColor?: T;
            };
        mainHeading?:
          | T
          | {
              text?: T;
              color?: T;
              fontSize?: T;
              fontWeight?: T;
            };
      };
  products?:
    | T
    | {
        order?: T;
        isActive?: T;
        styles?:
          | T
          | {
              backgroundColor?: T;
              borderColor?: T;
              borderWidth?: T;
              borderRadius?: T;
              padding?: T;
              marginBottom?: T;
            };
        leftContainer?:
          | T
          | {
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    textColor?: T;
                  };
              title?: T;
              titleStyles?:
                | T
                | {
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                  };
              description?: T;
              descriptionStyles?:
                | T
                | {
                    color?: T;
                    fontSize?: T;
                    lineHeight?: T;
                  };
              tag?:
                | T
                | {
                    show?: T;
                    text?: T;
                    icon?: T;
                    iconUrl?: T;
                    styles?:
                      | T
                      | {
                          backgroundColor?: T;
                          textColor?: T;
                          borderRadius?: T;
                        };
                  };
              productSeo?:
                | T
                | {
                    sku?: T;
                    brand?: T;
                    price?: T;
                    currency?: T;
                    availability?: T;
                    ratingValue?: T;
                    reviewCount?: T;
                  };
            };
        applicationsSection?:
          | T
          | {
              show?: T;
              heading?: T;
              headingStyles?:
                | T
                | {
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                  };
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    padding?: T;
                  };
              applications?:
                | T
                | {
                    order?: T;
                    title?: T;
                    image?: T;
                    imageUrl?: T;
                    styles?:
                      | T
                      | {
                          backgroundColor?: T;
                          textColor?: T;
                          borderColor?: T;
                          borderRadius?: T;
                          padding?: T;
                        };
                    id?: T;
                  };
            };
        ctaButton?:
          | T
          | {
              show?: T;
              text?: T;
              link?: T;
              icon?: T;
              iconUrl?: T;
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    textColor?: T;
                    hoverBackgroundColor?: T;
                    hoverTextColor?: T;
                    borderRadius?: T;
                    padding?: T;
                    fontSize?: T;
                    fontWeight?: T;
                  };
            };
        rightContainer?:
          | T
          | {
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    borderRadius?: T;
                  };
              image?: T;
              imageUrl?: T;
              imageStyles?:
                | T
                | {
                    width?: T;
                    height?: T;
                    objectFit?: T;
                    borderRadius?: T;
                  };
              sliderSettings?:
                | T
                | {
                    autoplay?: T;
                    delay?: T;
                    duration?: T;
                    infinite?: T;
                  };
            };
        id?: T;
      };
  seo?:
    | T
    | {
        meta_title?: T;
        meta_description?: T;
        keyword_optimization?:
          | T
          | {
              primary_keyword?: T;
              secondary_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              long_tail_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              keyword_density_target?: T;
              lsi_keywords?: T;
            };
        open_graph?:
          | T
          | {
              og_title?: T;
              og_description?: T;
              og_image?: T;
              og_image_alt?: T;
              og_type?: T;
              og_locale?: T;
              og_site_name?: T;
            };
        twitter?:
          | T
          | {
              twitter_card_type?: T;
              twitter_title?: T;
              twitter_description?: T;
              twitter_image?: T;
              twitter_image_alt?: T;
              twitter_site?: T;
              twitter_creator?: T;
            };
        schema?:
          | T
          | {
              enable_schema?: T;
              article_type?: T;
              headline?: T;
              word_count?: T;
              time_required?: T;
              publisher?:
                | T
                | {
                    name?: T;
                    logo?: T;
                    logo_width?: T;
                    logo_height?: T;
                    url?: T;
                  };
              author_schema?:
                | T
                | {
                    author_type?: T;
                    author_url?: T;
                  };
              modified_time?: T;
              faq_schema?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              breadcrumb_schema?:
                | T
                | {
                    name?: T;
                    item?: T;
                    id?: T;
                  };
            };
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        urls?:
          | T
          | {
              canonical_url?: T;
              alternate_languages?:
                | T
                | {
                    language_code?: T;
                    url?: T;
                    id?: T;
                  };
            };
        sitemap?:
          | T
          | {
              include_in_sitemap?: T;
              sitemap_priority?: T;
              change_frequency?: T;
              last_modified?: T;
            };
        performance?:
          | T
          | {
              preload_resources?:
                | T
                | {
                    href?: T;
                    as?: T;
                    type?: T;
                    id?: T;
                  };
            };
        custom_tags?:
          | T
          | {
              meta_tags?:
                | T
                | {
                    tag_type?: T;
                    attribute_name?: T;
                    attribute_value?: T;
                    id?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources-section_select".
 */
export interface ResourcesSectionSelect<T extends boolean = true> {
  sectionName?: T;
  isActive?: T;
  hasBackgroundImage?: T;
  backgroundImage?: T;
  styling?:
    | T
    | {
        sectionBackgroundColor?: T;
        sectionPaddingTop?: T;
        sectionPaddingBottom?: T;
        dotColor?: T;
        labelColor?: T;
        mainHeadingColor?: T;
        descriptionColor?: T;
        cardBackgroundColor?: T;
        cardTitleColor?: T;
        cardDescriptionColor?: T;
        iconColor?: T;
      };
  content?:
    | T
    | {
        label?: T;
        title?: T;
        description?: T;
      };
  technicalResources?:
    | T
    | {
        order?: T;
        isActive?: T;
        title?: T;
        description?: T;
        file?: T;
        externalLink?: T;
        openInNewTab?: T;
        customStyling?:
          | T
          | {
              useCustomStyling?: T;
              backgroundColor?: T;
              titleColor?: T;
              descriptionColor?: T;
              iconColor?: T;
            };
        id?: T;
      };
  advancedSettings?:
    | T
    | {
        customCSS?: T;
        customClassName?: T;
        sectionId?: T;
        maxResourcesPerRow?: T;
        cardHoverEffect?: T;
      };
  seo?:
    | T
    | {
        sectionAriaLabel?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  isActive?: T;
  isFeatured?: T;
  order?: T;
  title?: T;
  slug?: T;
  description?: T;
  content?: T;
  image?: T;
  tag?: T;
  min_read?: T;
  created_at?: T;
  author?:
    | T
    | {
        name?: T;
        profile_picture?: T;
        bio?: T;
      };
  related_blogs?: T;
  seo?:
    | T
    | {
        meta_title?: T;
        meta_description?: T;
        keyword_optimization?:
          | T
          | {
              primary_keyword?: T;
              secondary_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              long_tail_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              keyword_density_target?: T;
              lsi_keywords?: T;
            };
        open_graph?:
          | T
          | {
              og_title?: T;
              og_description?: T;
              og_image?: T;
              og_image_alt?: T;
              og_type?: T;
              og_locale?: T;
              og_site_name?: T;
              article_section?: T;
              article_tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
            };
        twitter?:
          | T
          | {
              twitter_card_type?: T;
              twitter_title?: T;
              twitter_description?: T;
              twitter_image?: T;
              twitter_image_alt?: T;
              twitter_site?: T;
              twitter_creator?: T;
            };
        schema?:
          | T
          | {
              enable_schema?: T;
              article_type?: T;
              headline?: T;
              word_count?: T;
              time_required?: T;
              publisher?:
                | T
                | {
                    name?: T;
                    logo?: T;
                    logo_width?: T;
                    logo_height?: T;
                    url?: T;
                  };
              author_schema?:
                | T
                | {
                    author_type?: T;
                    author_url?: T;
                    author_job_title?: T;
                    author_social_profiles?:
                      | T
                      | {
                          url?: T;
                          id?: T;
                        };
                  };
              modified_time?: T;
              image_schema?:
                | T
                | {
                    image?: T;
                    caption?: T;
                    id?: T;
                  };
              faq_schema?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              breadcrumb_schema?:
                | T
                | {
                    name?: T;
                    item?: T;
                    id?: T;
                  };
            };
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        urls?:
          | T
          | {
              canonical_url?: T;
              alternate_languages?:
                | T
                | {
                    language_code?: T;
                    url?: T;
                    id?: T;
                  };
            };
        sitemap?:
          | T
          | {
              include_in_sitemap?: T;
              sitemap_priority?: T;
              change_frequency?: T;
              last_modified?: T;
            };
        link_management?:
          | T
          | {
              redirect_type?: T;
              redirect_url?: T;
              external_links_policy?: T;
            };
        content_analysis?:
          | T
          | {
              readability_score?: T;
              grade_level?: T;
              sentence_count?: T;
              paragraph_count?: T;
              keyword_density?: T;
              internal_links_count?: T;
              external_links_count?: T;
              images_count?: T;
              images_with_alt_count?: T;
            };
        seo_score?:
          | T
          | {
              overall_score?: T;
              score_breakdown?:
                | T
                | {
                    title_score?: T;
                    description_score?: T;
                    keyword_score?: T;
                    content_score?: T;
                    technical_score?: T;
                    mobile_score?: T;
                    accessibility_score?: T;
                  };
              recommendations?:
                | T
                | {
                    priority?: T;
                    category?: T;
                    message?: T;
                    fix_url?: T;
                    id?: T;
                  };
              last_analysis?: T;
            };
        geographic?:
          | T
          | {
              enable_geo_targeting?: T;
              geo_region?: T;
              geo_placename?: T;
              geo_position?: T;
              icbm?: T;
            };
        performance?:
          | T
          | {
              preload_resources?:
                | T
                | {
                    href?: T;
                    as?: T;
                    type?: T;
                    id?: T;
                  };
              dns_prefetch?:
                | T
                | {
                    domain?: T;
                    id?: T;
                  };
              preconnect?:
                | T
                | {
                    domain?: T;
                    id?: T;
                  };
              critical_css?: T;
            };
        security?:
          | T
          | {
              referrer_policy?: T;
              content_security_policy?: T;
            };
        custom_tags?:
          | T
          | {
              meta_tags?:
                | T
                | {
                    tag_type?: T;
                    attribute_name?: T;
                    attribute_value?: T;
                    id?: T;
                  };
              custom_head_scripts?: T;
              custom_body_scripts?: T;
            };
        social_media?:
          | T
          | {
              pinterest?:
                | T
                | {
                    pin_description?: T;
                    pin_rich_pins?: T;
                  };
              linkedin?:
                | T
                | {
                    linkedin_author?: T;
                  };
              whatsapp?:
                | T
                | {
                    whatsapp_share_text?: T;
                  };
              telegram?:
                | T
                | {
                    telegram_channel?: T;
                  };
            };
        analytics?:
          | T
          | {
              google_analytics_page_type?: T;
              google_analytics_category?: T;
              custom_dimensions?:
                | T
                | {
                    dimension_name?: T;
                    dimension_value?: T;
                    id?: T;
                  };
              conversion_tracking?:
                | T
                | {
                    enable_conversion?: T;
                    conversion_id?: T;
                    conversion_label?: T;
                  };
            };
        accessibility?:
          | T
          | {
              lang_attribute?: T;
              skip_to_content?: T;
              aria_label?: T;
              color_contrast_compliance?: T;
            };
        competitive?:
          | T
          | {
              target_competitors?:
                | T
                | {
                    competitor_url?: T;
                    notes?: T;
                    id?: T;
                  };
              target_serp_position?: T;
              current_serp_position?: T;
            };
        freshness?:
          | T
          | {
              content_status?: T;
              review_date?: T;
              expiry_date?: T;
              update_frequency_goal?: T;
              version_history?:
                | T
                | {
                    version?: T;
                    update_date?: T;
                    changes_summary?: T;
                    id?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-section_select".
 */
export interface BlogSectionSelect<T extends boolean = true> {
  sectionName?: T;
  isActive?: T;
  styling?:
    | T
    | {
        sectionBackgroundColor?: T;
        sectionPaddingTop?: T;
        sectionPaddingBottom?: T;
        dotColor?: T;
        featuredLabelColor?: T;
        recentLabelColor?: T;
        blogTitleColor?: T;
        blogDescriptionColor?: T;
        tagBackgroundColor?: T;
        tagTextColor?: T;
      };
  labels?:
    | T
    | {
        featuredLabel?: T;
        recentLabel?: T;
        moreLabel?: T;
        viewAllText?: T;
        viewAllLink?: T;
      };
  displaySettings?:
    | T
    | {
        showFeaturedSection?: T;
        showRecentSection?: T;
        numberOfRecentBlogs?: T;
        autoSelectFeatured?: T;
        manualFeaturedBlog?: T;
      };
  blogPageHeroStyling?:
    | T
    | {
        heroBackgroundColor?: T;
        tagBackgroundColor?: T;
        tagTextColor?: T;
        titleColor?: T;
        descriptionColor?: T;
        authorNameColor?: T;
        dateColor?: T;
      };
  advanced?:
    | T
    | {
        customCSS?: T;
        customClassName?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  name?: T;
  componentType?: T;
  isActive?: T;
  order?: T;
  sections?:
    | T
    | {
        sectionName?: T;
        sectionOrder?: T;
        backgroundColor?: T;
        backgroundImage?: T;
        backgroundImageUrl?: T;
        textColor?: T;
        accentColor?: T;
        padding?:
          | T
          | {
              top?: T;
              bottom?: T;
              left?: T;
              right?: T;
            };
        content?:
          | T
          | {
              badge?: T;
              badgeColor?: T;
              title?: T;
              titleColor?: T;
              description?: T;
              descriptionColor?: T;
            };
        contactDetails?:
          | T
          | {
              detailsOrder?:
                | T
                | {
                    type?: T;
                    label?: T;
                    labelColor?: T;
                    value?: T;
                    valueColor?: T;
                    link?: T;
                    isVisible?: T;
                    order?: T;
                    id?: T;
                  };
            };
        formSettings?:
          | T
          | {
              showForm?: T;
              formBackgroundColor?: T;
              formTextColor?: T;
              inputBorderColor?: T;
              submitButtonColor?: T;
              submitButtonTextColor?: T;
              submitButtonText?: T;
              successMessage?: T;
              errorMessage?: T;
              formFields?:
                | T
                | {
                    fieldName?: T;
                    fieldLabel?: T;
                    fieldType?: T;
                    placeholder?: T;
                    isRequired?: T;
                    fieldWidth?: T;
                    order?: T;
                    isVisible?: T;
                    id?: T;
                  };
            };
        customCSS?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  email_address?: T;
  phone?: T;
  city?: T;
  message?: T;
  status?: T;
  notes?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  componentName?: T;
  componentType?: T;
  isActive?: T;
  order?: T;
  faqSection?:
    | T
    | {
        sectionStyles?:
          | T
          | {
              backgroundColor?: T;
              paddingTop?: T;
              paddingBottom?: T;
            };
        topSection?:
          | T
          | {
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    marginBottom?: T;
                  };
              dot?:
                | T
                | {
                    show?: T;
                    color?: T;
                    size?: T;
                  };
              smallHeading?:
                | T
                | {
                    text?: T;
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                    textTransform?: T;
                  };
              mainHeading?:
                | T
                | {
                    text?: T;
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                    lineHeight?: T;
                    marginTop?: T;
                  };
            };
        faqItems?:
          | T
          | {
              question?: T;
              answer?: T;
              isDefaultOpen?: T;
              styles?:
                | T
                | {
                    questionColor?: T;
                    questionFontSize?: T;
                    questionFontWeight?: T;
                    answerColor?: T;
                    answerFontSize?: T;
                    answerFontWeight?: T;
                    borderColor?: T;
                    backgroundColor?: T;
                    hoverBackgroundColor?: T;
                  };
              id?: T;
            };
        faqListStyles?:
          | T
          | {
              itemSpacing?: T;
              chevronColor?: T;
              chevronSize?: T;
            };
        ctaSection?:
          | T
          | {
              show?: T;
              styles?:
                | T
                | {
                    backgroundColor?: T;
                    marginTop?: T;
                    padding?: T;
                  };
              ctaButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                    backgroundColor?: T;
                    textColor?: T;
                    hoverBackgroundColor?: T;
                    fontSize?: T;
                    fontWeight?: T;
                    padding?: T;
                    borderRadius?: T;
                    showIcon?: T;
                    iconUrl?: T;
                  };
              ctaText?:
                | T
                | {
                    text?: T;
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                    lineHeight?: T;
                    marginTop?: T;
                  };
            };
        animations?:
          | T
          | {
              enableAnimations?: T;
              transitionDuration?: T;
              transitionEasing?: T;
            };
        layout?:
          | T
          | {
              maxWidth?: T;
              faqListMaxWidth?: T;
              ctaSectionMaxWidth?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-component_select".
 */
export interface FooterComponentSelect<T extends boolean = true> {
  componentName?: T;
  isActive?: T;
  backgroundColor?: T;
  textColor?: T;
  padding?:
    | T
    | {
        top?: T;
        bottom?: T;
        left?: T;
        right?: T;
      };
  logoSection?:
    | T
    | {
        logo?: T;
        logoUrl?: T;
        logoLink?: T;
        logoAlt?: T;
        logoMarginLeft?: T;
        backgroundColor?: T;
        brandSubtext?: T;
        subtextColor?: T;
      };
  newsletterForm?:
    | T
    | {
        enabled?: T;
        backgroundColor?: T;
        inputPlaceholder?: T;
        submitButtonText?: T;
        inputBackgroundColor?: T;
        inputTextColor?: T;
        inputBorderColor?: T;
        buttonBackgroundColor?: T;
        buttonTextColor?: T;
        buttonHoverColor?: T;
        successMessage?: T;
        errorMessage?: T;
        privacyText?: T;
        privacyTextColor?: T;
      };
  navigationSections?:
    | T
    | {
        heading?: T;
        headingColor?: T;
        backgroundColor?: T;
        padding?: T;
        links?:
          | T
          | {
              label?: T;
              url?: T;
              linkColor?: T;
              linkHoverColor?: T;
              openInNewTab?: T;
              id?: T;
            };
        id?: T;
      };
  bottomSection?:
    | T
    | {
        backgroundColor?: T;
        borderTop?: T;
        padding?: T;
        copyrightText?: T;
        copyrightTextColor?: T;
      };
  socialSection?:
    | T
    | {
        heading?: T;
        headingColor?: T;
        socialLinks?:
          | T
          | {
              platform?: T;
              url?: T;
              iconColor?: T;
              iconHoverColor?: T;
              customSvg?: T;
              id?: T;
            };
      };
  layout?:
    | T
    | {
        maxWidth?: T;
        topSectionFlexDirection?: T;
        topSectionGap?: T;
        bottomSectionFlexDirection?: T;
        bottomSectionJustifyContent?: T;
      };
  customCSS?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  isActive?: T;
  sections?:
    | T
    | {
        sectionId?: T;
        sectionType?: T;
        order?: T;
        isVisible?: T;
        styling?:
          | T
          | {
              backgroundColor?: T;
              textColor?: T;
              paddingTop?: T;
              paddingBottom?: T;
              paddingLeft?: T;
              paddingRight?: T;
              customCSS?: T;
            };
        storyContent?:
          | T
          | {
              image?:
                | T
                | {
                    url?: T;
                    altText?: T;
                    sizes?: T;
                    loading?: T;
                  };
              title?:
                | T
                | {
                    text?: T;
                    color?: T;
                    fontSize?: T;
                    fontWeight?: T;
                    customClass?: T;
                  };
              description?:
                | T
                | {
                    content?: T;
                    color?: T;
                    fontSize?: T;
                    lineHeight?: T;
                    customClass?: T;
                  };
              layout?:
                | T
                | {
                    imagePosition?: T;
                    containerWidth?: T;
                    verticalAlignment?: T;
                  };
            };
        links?:
          | T
          | {
              linkText?: T;
              linkUrl?: T;
              linkType?: T;
              openInNewTab?: T;
              order?: T;
              styling?:
                | T
                | {
                    backgroundColor?: T;
                    textColor?: T;
                    borderColor?: T;
                    borderWidth?: T;
                    borderRadius?: T;
                    padding?: T;
                    hoverBackgroundColor?: T;
                    hoverTextColor?: T;
                    customClass?: T;
                  };
              id?: T;
            };
        animations?:
          | T
          | {
              enableAnimations?: T;
              animationType?: T;
              animationDelay?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: string;
  sections?:
    | {
        sectionType: 'hero' | 'about';
        isActive?: boolean | null;
        /**
         * Internal name to identify this section
         */
        sectionName?: string | null;
        hero?: {
          backgroundImage?: (string | null) | Media;
          backgroundImageUrl?: string | null;
          backgroundOverlay?: string | null;
          backgroundColor?: string | null;
          smallTitle: string;
          smallTitleColor?: string | null;
          title: string;
          titleColor?: string | null;
          description: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          descriptionColor?: string | null;
          dotColor?: string | null;
          ctaButtons?:
            | {
                text: string;
                link: string;
                variant?: ('primary' | 'secondary') | null;
                backgroundColor?: string | null;
                textColor?: string | null;
                icon?: (string | null) | Media;
                iconUrl?: string | null;
                id?: string | null;
              }[]
            | null;
          /**
           * Add custom CSS for this section
           */
          customCSS?: string | null;
          customClasses?: string | null;
        };
        about?: {
          backgroundColor?: string | null;
          testimonialTitle: string;
          testimonialTitleColor?: string | null;
          image1?: (string | null) | Media;
          image1Url?: string | null;
          image2?: (string | null) | Media;
          image2Url?: string | null;
          sectionLabel?: string | null;
          sectionLabelColor?: string | null;
          dotColor?: string | null;
          title: string;
          titleColor?: string | null;
          description: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          descriptionColor?: string | null;
          ctaButton?: {
            text?: string | null;
            link?: string | null;
            backgroundColor?: string | null;
            textColor?: string | null;
          };
          contactLink?: {
            text?: string | null;
            url?: string | null;
            textColor?: string | null;
          };
          howToStart: {
            backgroundColor?: string | null;
            sectionLabel?: string | null;
            sectionLabelColor?: string | null;
            dotColor?: string | null;
            title: string;
            titleColor?: string | null;
            description: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            descriptionColor?: string | null;
            image?: (string | null) | Media;
            imageUrl?: string | null;
            steps?:
              | {
                  title: string;
                  titleColor?: string | null;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: any;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  descriptionColor?: string | null;
                  icon?: (string | null) | Media;
                  iconUrl?: string | null;
                  backgroundColor?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          /**
           * Add custom CSS for this section
           */
          customCSS?: string | null;
          customClasses?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  /**
   * Complete SEO control – auto-filled from content
   */
  ultimate: {
    /**
     * HOME PAGE TITLE (50-60 chars)
     */
    meta_title?: string | null;
    /**
     * HOME PAGE DESCRIPTION (150-160 chars)
     */
    meta_description?: string | null;
    keyword_optimization: {
      primary_keyword: string;
      secondary_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      long_tail_keywords?:
        | {
            keyword: string;
            id?: string | null;
          }[]
        | null;
      keyword_density_target?: number | null;
      lsi_keywords?: string | null;
    };
    open_graph?: {
      og_title?: string | null;
      og_description?: string | null;
      og_image?: (string | null) | Media;
      og_image_alt?: string | null;
      og_type?: 'website' | null;
      og_locale?: string | null;
      og_site_name?: string | null;
    };
    twitter?: {
      twitter_card_type?: 'summary_large_image' | null;
      twitter_title?: string | null;
      twitter_description?: string | null;
      twitter_image?: (string | null) | Media;
      twitter_image_alt?: string | null;
      twitter_site?: string | null;
      twitter_creator?: string | null;
    };
    schema: {
      enable_schema?: boolean | null;
      webpage_type?: 'WebPage' | null;
      headline?: string | null;
      word_count?: number | null;
      time_required?: string | null;
      organization: {
        name: string;
        url?: string | null;
        logo?: (string | null) | Media;
        sameAs?:
          | {
              url?: string | null;
              id?: string | null;
            }[]
          | null;
      };
      site_navigation?:
        | {
            name: string;
            url: string;
            id?: string | null;
          }[]
        | null;
      howto_schema?: {
        name?: string | null;
        description?: string | null;
        totalTime?: string | null;
        step?:
          | {
              name: string;
              text: string;
              image?: (string | null) | Media;
              id?: string | null;
            }[]
          | null;
      };
      faq_schema?:
        | {
            question: string;
            answer: string;
            id?: string | null;
          }[]
        | null;
      breadcrumb_schema?:
        | {
            name: string;
            item: string;
            id?: string | null;
          }[]
        | null;
    };
    robots?: {
      index?: ('index' | 'noindex') | null;
      follow?: ('follow' | 'nofollow') | null;
    };
    urls?: {
      canonical_url?: string | null;
    };
    sitemap?: {
      include_in_sitemap?: boolean | null;
      sitemap_priority?: number | null;
      change_frequency?: 'daily' | null;
      last_modified?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  sections?:
    | T
    | {
        sectionType?: T;
        isActive?: T;
        sectionName?: T;
        hero?:
          | T
          | {
              backgroundImage?: T;
              backgroundImageUrl?: T;
              backgroundOverlay?: T;
              backgroundColor?: T;
              smallTitle?: T;
              smallTitleColor?: T;
              title?: T;
              titleColor?: T;
              description?: T;
              descriptionColor?: T;
              dotColor?: T;
              ctaButtons?:
                | T
                | {
                    text?: T;
                    link?: T;
                    variant?: T;
                    backgroundColor?: T;
                    textColor?: T;
                    icon?: T;
                    iconUrl?: T;
                    id?: T;
                  };
              customCSS?: T;
              customClasses?: T;
            };
        about?:
          | T
          | {
              backgroundColor?: T;
              testimonialTitle?: T;
              testimonialTitleColor?: T;
              image1?: T;
              image1Url?: T;
              image2?: T;
              image2Url?: T;
              sectionLabel?: T;
              sectionLabelColor?: T;
              dotColor?: T;
              title?: T;
              titleColor?: T;
              description?: T;
              descriptionColor?: T;
              ctaButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                    backgroundColor?: T;
                    textColor?: T;
                  };
              contactLink?:
                | T
                | {
                    text?: T;
                    url?: T;
                    textColor?: T;
                  };
              howToStart?:
                | T
                | {
                    backgroundColor?: T;
                    sectionLabel?: T;
                    sectionLabelColor?: T;
                    dotColor?: T;
                    title?: T;
                    titleColor?: T;
                    description?: T;
                    descriptionColor?: T;
                    image?: T;
                    imageUrl?: T;
                    steps?:
                      | T
                      | {
                          title?: T;
                          titleColor?: T;
                          description?: T;
                          descriptionColor?: T;
                          icon?: T;
                          iconUrl?: T;
                          backgroundColor?: T;
                          id?: T;
                        };
                  };
              customCSS?: T;
              customClasses?: T;
            };
        id?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  ultimate?:
    | T
    | {
        meta_title?: T;
        meta_description?: T;
        keyword_optimization?:
          | T
          | {
              primary_keyword?: T;
              secondary_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              long_tail_keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              keyword_density_target?: T;
              lsi_keywords?: T;
            };
        open_graph?:
          | T
          | {
              og_title?: T;
              og_description?: T;
              og_image?: T;
              og_image_alt?: T;
              og_type?: T;
              og_locale?: T;
              og_site_name?: T;
            };
        twitter?:
          | T
          | {
              twitter_card_type?: T;
              twitter_title?: T;
              twitter_description?: T;
              twitter_image?: T;
              twitter_image_alt?: T;
              twitter_site?: T;
              twitter_creator?: T;
            };
        schema?:
          | T
          | {
              enable_schema?: T;
              webpage_type?: T;
              headline?: T;
              word_count?: T;
              time_required?: T;
              organization?:
                | T
                | {
                    name?: T;
                    url?: T;
                    logo?: T;
                    sameAs?:
                      | T
                      | {
                          url?: T;
                          id?: T;
                        };
                  };
              site_navigation?:
                | T
                | {
                    name?: T;
                    url?: T;
                    id?: T;
                  };
              howto_schema?:
                | T
                | {
                    name?: T;
                    description?: T;
                    totalTime?: T;
                    step?:
                      | T
                      | {
                          name?: T;
                          text?: T;
                          image?: T;
                          id?: T;
                        };
                  };
              faq_schema?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              breadcrumb_schema?:
                | T
                | {
                    name?: T;
                    item?: T;
                    id?: T;
                  };
            };
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        urls?:
          | T
          | {
              canonical_url?: T;
            };
        sitemap?:
          | T
          | {
              include_in_sitemap?: T;
              sitemap_priority?: T;
              change_frequency?: T;
              last_modified?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}